# Application Configuration
spring.application.name=api-gateway
server.port=9091
spring.cloud.config.import-check.enabled=false

# Eureka Client Configuration
eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:8761/eureka/
eureka.instance.instance-id=config-server:${server.port}

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=false
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/

# Routes Configuration
# Teacher Assign Service Route
spring.cloud.gateway.routes[0].id=teacher-assign-service
spring.cloud.gateway.routes[0].uri=lb://teacher-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/teacher-assign/**

# Teacher Service Route
spring.cloud.gateway.routes[1].id=teacher-service
spring.cloud.gateway.routes[1].uri=lb://teacher-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/teacher/**

# Courses Service Route
spring.cloud.gateway.routes[2].id=courses-service
spring.cloud.gateway.routes[2].uri=lb://courses-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/courses/**

# Subject Service Route
spring.cloud.gateway.routes[3].id=subject-service
spring.cloud.gateway.routes[3].uri=lb://subject-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/subject/**

# Discovery Server Routes
spring.cloud.gateway.routes[4].id=eureka-service
spring.cloud.gateway.routes[4].uri=http://localhost:8761
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[4].filters[0]=SetPath=/

# Discovery Server Static Routes
spring.cloud.gateway.routes[5].id=eureka-service-static
spring.cloud.gateway.routes[5].uri=http://localhost:8761
spring.cloud.gateway.routes[5].predicates[0]=Path=/eureka/**

# Actuator Routes
# Teacher Service Actuator Route
spring.cloud.gateway.routes[6].uri=lb://teacher-service
spring.cloud.gateway.routes[6].predicates[0]=Path=/actuator/teacher/**

# Courses Service Actuator Route
spring.cloud.gateway.routes[7].id=courses-service-actuator
spring.cloud.gateway.routes[7].uri=lb://courses-service/actuator/courses/**
spring.cloud.gateway.routes[7].predicates[0]=Path=/actuator/courses/**

# Subject Service Actuator Route
spring.cloud.gateway.routes[8].id=subject-service-actuator
spring.cloud.gateway.routes[8].uri=lb://subject-service/actuator/subject/**
spring.cloud.gateway.routes[8].predicates[0]=Path=/actuator/subject/**

# Discovery Actuator Route
spring.cloud.gateway.routes[9].id=discovery-service-actuator
spring.cloud.gateway.routes[9].uri=http://localhost:8761/actuator/discovery/**
spring.cloud.gateway.routes[9].predicates[0]=Path=/actuator/discovery/**

# Default Filters
spring.cloud.gateway.default-filters[0]=SaveSession
spring.cloud.gateway.default-filters[1]=TokenRelay

# Keycloak Configuration for JWT Validation
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/microservices-bolivariano-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/microservices-bolivariano-realm/protocol/openid-connect/certs

# Security Config: Protect routes that require authentication
spring.cloud.gateway.security.oauth2.client.registration.keycloak.client-id=microservices_client
spring.cloud.gateway.security.oauth2.client.registration.keycloak.client-secret=1yklD580BUWFYNV1OKzosREv5RcqlBr4
spring.cloud.gateway.security.oauth2.client.registration.keycloak.scope=openid
spring.cloud.gateway.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.cloud.gateway.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak

# Logging Configuration
logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator=info

# Actuator Endpoints Exposure
management.endpoints.web.exposure.include=health,prometheus
management.endpoints.web.base-path=/actuator

# Tracing Configuration
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

# Custom Log Pattern
logging.pattern.level= %5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]